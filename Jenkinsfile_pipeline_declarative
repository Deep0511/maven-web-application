// groovy script for declarative way pipeline script
pipeline {
agent any 
tools {
    maven 'maven3.8.6'
}
options {
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5'))
    timestamps()
  }

stages{
    
stage('CheckOutCode'){
steps {
    slackNotification('STARTED')
        git branch: 'development', credentialsId: '0cd3bd27-ad11-4c89-8bef-b199f1212bbc', url: 'https://github.com/Deep0511/maven-web-application.git'
}
}
stage('Build'){
steps {
sh "mvn clean package"
}
}
stage('ExecuteSonarReport'){
steps {
sh "mvn clean sonar:sonar"
}
}
stage('UploadArtifactToArtifactRepo'){
steps {
sh "mvn clean deploy"
}
}
stage('DeployInToTomcatServer'){
steps {
sshagent(['6a840ee9-aa5f-40ff-b5da-e1482bd33cdd']) {
sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@35.154.181.161:/opt/apache-tomcat-9.0.65/webapps/"
}   
}
}
} // stages closing
post {
  success {
    slackNotification(currentBuild.result)
  }
  failure {
    slackNotification(currentBuild.result)
  }
}

} // pipeline closing

// code snippet for slack notification
def slackNotification(String buildStatus = 'STARTED') {
    // build status of null means successful
    buildStatus =  buildStatus ?: 'SUCCESS'
  
    // Default values
    def colorName = 'RED'
    def colorCode = '#FF0000'
    def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
    def summary = "${subject} (${env.BUILD_URL})"
  
    // Override default values based on build status
    if (buildStatus == 'STARTED') {
      color = 'YELLOW'
      colorCode = '#FFFF00'
    } else if (buildStatus == 'SUCCESS') {
      color = 'GREEN'
      colorCode = '#00FF00'
    } else {
      color = 'RED'
      colorCode = '#FF0000'
    }
  
    // Send notifications
    slackSend (color: colorCode, message: summary, channel: "#pipeline-declarative")
  }
